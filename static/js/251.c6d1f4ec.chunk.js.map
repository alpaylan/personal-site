{"version":3,"file":"static/js/251.c6d1f4ec.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","data/resume/degrees.js","data/resume/positions.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.string,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Keywords = ({ data }) => {\n  const styles = {\n    border: '2px solid rgba(134, 133, 133, 0.3)',\n    borderRadius: '5px',\n    marginRight: '.4em',\n    background: 'rgb(247, 248, 249)',\n    textAlign: 'left',\n    paddingTop: '.2em',\n    paddingBottom: '.2em',\n    paddingLeft: '.2em',\n    paddingRight: '.2em',\n    color: 'rgb(144, 143, 143)',\n  };\n\n  const keywords = data.map((keyword) => (\n    <span style={styles}>\n      {keyword}\n    </span>\n  ));\n  return (\n    <div style={{ marginBottom: '0.6em' }}>\n      {keywords}\n    </div>\n  );\n};\n\nKeywords.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4>{data.company}</h4>\n      <p className=\"position\">{data.position}</p>\n      {(data.keywords && <Keywords data={data.keywords} />)}\n      <p className=\"location\">{data.location} </p>\n      <p className=\"daterange\"> {data.date}</p>\n    </header>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    company: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    descr: PropTypes.string.isRequired,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"work experience\" />\n    <div className=\"title\">\n      <h3>Work Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    location: PropTypes.string,\n    position: PropTypes.string,\n    date: PropTypes.string,\n    descr: PropTypes.string,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","const degrees = [\n  {\n    school: 'University of Maryland',\n    degree: 'Ph.D. in Computer Science',\n    link: 'https://cs.umd.edu',\n    year: '2021 - Present',\n  },\n  {\n    school: 'Middle East Technical University',\n    degree: 'B.S. Computer Engineering',\n    link: 'https://ceng.metu.edu.tr',\n    year: '2017-2021',\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'University of Maryland - PLUM',\n    location: 'Maryland, USA',\n    position: 'Graduate Research Assistant',\n    date: 'Aug 2022 - Present',\n    descr: 'Working with Leonidas Lampropoulos on the intersection of Property Based Testing,Fuzzing, and Formal Verification.',\n    keywords: ['Coq', 'OCaml', 'Python', 'Property Based Testing'],\n  },\n  {\n    company: 'Amazon Web Services Privacy Engineering Team - Automated Reasoning',\n    location: 'New York, USA',\n    position: 'Applied Science Intern',\n    date: 'May 2022 - Aug 2022',\n    descr: 'Worked on the design and implementation of a novel encryption scheme on top of the Open Source AWS Encryption SDK.',\n    keywords: ['Python', 'Dafny', 'AWS Encryption SDK'],\n  },\n  {\n    company: 'University of Maryland - Maryland Cybersecurity Center(MC2)',\n    location: 'Maryland, USA(Remote)',\n    position: 'Research Intern',\n    date: 'Jul 2020 - Dec 2020',\n    descr: 'Worked on application of Inductive Program Synthesis Techniques on Automatic Exploit Generation Domain.',\n  },\n  {\n    company: 'Havelsan',\n    location: 'Ankara, Turkey',\n    position: 'Working Student Engineer',\n    date: 'Jul 2020 - Jul 2021',\n    descr: 'Worked on a browser based Video Conference Application. Designed and implemented a novel bandwidth detection and video optimization algorithm.',\n    keywords: ['Javascript', 'React'],\n  },\n  {\n    company: 'Emproof',\n    location: 'Bochum, Germany',\n    position: 'Embedded Security Engineering Intern',\n    date: 'Jun 2019 - Sept 2019',\n    descr: 'Worked on translation validation of binary obfuscation techniques.',\n    keywords: ['C++', 'Z3 SMT Solver', 'ARM Assembly', 'Symbolic Execution'],\n  },\n];\n//  \\section{Teaching Experience}\n//  {\n// company: University of Maryland - Computer Science Department\n// Maryland, USA\\newline\n// position: Teaching Assistant for CMSC132 - Object Oriented Programming \\RNum{2}\n// Jan 2022 - May 2022\n// position: Teaching Assistant for CMSC351 - Algorithms\n// Aug 2021 - Dec 2021\n\nexport default positions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\n\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\n\nconst sections = [\n  'Education',\n  'Work Experience',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Resume of Alperen Keles.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            <h4><a href=\"documents/resume.pdf\" download=\"alperen_keles.pdf\">Download as PDF</a></h4>\n            <h4>|</h4>\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","href","link","school","year","Education","id","map","defaultProps","Keywords","styles","border","borderRadius","marginRight","background","textAlign","paddingTop","paddingBottom","paddingLeft","paddingRight","color","keywords","keyword","style","marginBottom","company","position","location","date","Experience","job","descr","sections","Main","title","description","to","download","sec","toLowerCase","degrees","positions"],"sourceRoot":""}